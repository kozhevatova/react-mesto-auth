[{"/Users/annakozevatova/dev/react-mesto-auth/src/index.js":"1","/Users/annakozevatova/dev/react-mesto-auth/src/reportWebVitals.js":"2","/Users/annakozevatova/dev/react-mesto-auth/src/components/App.js":"3","/Users/annakozevatova/dev/react-mesto-auth/src/components/FormValidator.js":"4","/Users/annakozevatova/dev/react-mesto-auth/src/components/EditAvatarPopup.js":"5","/Users/annakozevatova/dev/react-mesto-auth/src/components/Footer.js":"6","/Users/annakozevatova/dev/react-mesto-auth/src/components/AddPlacePopup.js":"7","/Users/annakozevatova/dev/react-mesto-auth/src/components/Header.js":"8","/Users/annakozevatova/dev/react-mesto-auth/src/components/Main.js":"9","/Users/annakozevatova/dev/react-mesto-auth/src/components/EditProfilePopup.js":"10","/Users/annakozevatova/dev/react-mesto-auth/src/components/ConfirmDeletePopup.js":"11","/Users/annakozevatova/dev/react-mesto-auth/src/components/ImagePopup.js":"12","/Users/annakozevatova/dev/react-mesto-auth/src/utils/api.js":"13","/Users/annakozevatova/dev/react-mesto-auth/src/contexts/CurrentUserContext.js":"14","/Users/annakozevatova/dev/react-mesto-auth/src/components/PopupWithForm.js":"15","/Users/annakozevatova/dev/react-mesto-auth/src/utils/constants.js":"16","/Users/annakozevatova/dev/react-mesto-auth/src/components/Card.js":"17","/Users/annakozevatova/dev/react-mesto-auth/src/components/Spinner.js":"18","/Users/annakozevatova/dev/react-mesto-auth/src/utils/utils.js":"19","/Users/annakozevatova/dev/react-mesto-auth/src/components/ProtectedRoute.js":"20","/Users/annakozevatova/dev/react-mesto-auth/src/components/Login.js":"21","/Users/annakozevatova/dev/react-mesto-auth/src/components/Register.js":"22","/Users/annakozevatova/dev/react-mesto-auth/src/components/InfoTooltip.js":"23","/Users/annakozevatova/dev/react-mesto-auth/src/utils/auth.js":"24","/Users/annakozevatova/dev/react-mesto-auth/src/components/HamburgerInfo.js":"25"},{"size":638,"mtime":1612358083406,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1606168251900,"results":"28","hashOfConfig":"27"},{"size":10351,"mtime":1612358066608,"results":"29","hashOfConfig":"27"},{"size":2777,"mtime":1612261979573,"results":"30","hashOfConfig":"27"},{"size":1114,"mtime":1612261979571,"results":"31","hashOfConfig":"27"},{"size":241,"mtime":1612261979572,"results":"32","hashOfConfig":"27"},{"size":1966,"mtime":1612261979569,"results":"33","hashOfConfig":"27"},{"size":1322,"mtime":1612356676784,"results":"34","hashOfConfig":"27"},{"size":1707,"mtime":1612261979574,"results":"35","hashOfConfig":"27"},{"size":2325,"mtime":1612261979572,"results":"36","hashOfConfig":"27"},{"size":498,"mtime":1612261979571,"results":"37","hashOfConfig":"27"},{"size":568,"mtime":1612261979574,"results":"38","hashOfConfig":"27"},{"size":2282,"mtime":1612261979664,"results":"39","hashOfConfig":"27"},{"size":84,"mtime":1612261979575,"results":"40","hashOfConfig":"27"},{"size":1084,"mtime":1612261979574,"results":"41","hashOfConfig":"27"},{"size":519,"mtime":1612356676791,"results":"42","hashOfConfig":"27"},{"size":2000,"mtime":1612261979570,"results":"43","hashOfConfig":"27"},{"size":88,"mtime":1612261979575,"results":"44","hashOfConfig":"27"},{"size":344,"mtime":1612261979665,"results":"45","hashOfConfig":"27"},{"size":316,"mtime":1612356676785,"results":"46","hashOfConfig":"27"},{"size":2030,"mtime":1612356676785,"results":"47","hashOfConfig":"27"},{"size":2407,"mtime":1612356676786,"results":"48","hashOfConfig":"27"},{"size":818,"mtime":1612356676784,"results":"49","hashOfConfig":"27"},{"size":1061,"mtime":1612356676790,"results":"50","hashOfConfig":"27"},{"size":324,"mtime":1612356676784,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"19ayk4a",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/annakozevatova/dev/react-mesto-auth/src/index.js",[],["104","105"],"/Users/annakozevatova/dev/react-mesto-auth/src/reportWebVitals.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/App.js",["106","107"],"import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\nimport HamburgerInfo from './HamburgerInfo';\n\nfunction App() {\n  //#region стейты\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isHamburgerClicked, setIsHamburgerClicked] = useState(false);\n  const [isRegisterOpen, setIsRegisterOpen] = useState(false);\n  const [isRegisterValid, setIsRegisterValid] = useState(false);\n  const [currentEmail, setCurrentEmail] = useState('');\n\n  //стейты для открытия/закрытия попапов\n  const [isEditProfileFormOpen, setIsEditProfileFormOpen] = useState(false);\n  const [isAddPlaceFormOpen, setIsAddPlaceFormOpen] = useState(false);\n  const [isEditAvatarFormOpen, setIsEditAvatarFormOpen] = useState(false);\n  const [isConfirmDeleteFormOpen, setIsConfirmDeleteFormOpen] = useState(false);\n  const [isInfoPopupOpen, setIsInfoPopupOpen] = useState(false);\n\n  const history = useHistory();\n\n  //#endregion\n\n  //#region эффекты\n  //получение данных о пользователе с сервера и присвоение этих данных контексту\n  useEffect(() => {\n    handleTokenCheck();\n    setIsLoading(true);\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards()\n    ])\n      .then((values) => {\n        const [userInfo, initialCards] = values;\n        console.log(userInfo);\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  //#endregion\n\n  //#region обработчики событий\n  //добавление карточки\n  const handleAddPlace = (newPlace) => {\n    setIsLoading(true);\n    api.addNewCard(newPlace.name, newPlace.link)\n      .then((newPlace) => {\n        setCards([newPlace, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //лайк\n  const handleCardLike = (card) => {\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    //отправка запроса в API и получение обновленных данных карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        //формирование нового массива на основе имеющегося, \n        //поставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //удаление карточки\n  const handleCardDelete = (card) => {\n    setIsLoading(true);\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //обработчик закрытия по нажатию Esc\n  const handleEscClose = (event) => {\n    if (event.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  //обработчик закрытия попапов при нажатии по фону\n  const handleCLosePopupByClickOnOverlay = (event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    closeAllPopups();\n  }\n\n  const setEscListener = () => {\n    document.addEventListener('keydown', handleEscClose);\n  }\n\n  const removeEscListener = () => {\n    document.removeEventListener('keydown', handleEscClose);\n  }\n\n  //обработчик клика по кнопке удаления карточки\n  const handleDeleteButtonClick = (card) => {\n    //открытие попапа подтверждения удаления\n    setIsConfirmDeleteFormOpen(true);\n    setCardToDelete(card);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования аватара\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования профиля\n  const handleEditProfileClick = () => {\n    setIsEditProfileFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа добавления карточки\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа с картинкой\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n\n    setEscListener();\n  }\n\n  //закрытие всех попапов\n  const closeAllPopups = () => {\n    setIsEditAvatarFormOpen(false);\n    setIsEditProfileFormOpen(false);\n    setIsAddPlaceFormOpen(false);\n    setIsConfirmDeleteFormOpen(false);\n    setIsInfoPopupOpen(false);\n    setSelectedCard(null);\n\n    removeEscListener();\n  }\n\n  //обработчик обновления инфы пользователя\n  const handleUpdateUser = (info) => {\n    setIsLoading(true);\n    api.setUserInfo(info.name, info.about)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //обработчик обновления аватара\n  const handleUpdateAvatar = (newAvatar) => {\n    setIsLoading(true);\n    api.editAvatar(newAvatar.avatar)\n      .then((newAvatar) => {\n        setCurrentUser(newAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //методы для авторизации и регистрации\n  const handleLogin = () => {\n    // setIsLoggedIn(true);\n    handleTokenCheck();\n  }\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setIsHamburgerClicked(false);\n    setIsRegisterOpen(false);\n    localStorage.removeItem('jwt');\n  }\n\n  const handleRegister = (status) => {\n    setIsInfoPopupOpen(status);\n    setIsRegisterValid(status);\n    setIsRegisterOpen(false);\n  }\n\n  const handleHamburgerClick = () => {\n    setIsHamburgerClicked(!isHamburgerClicked);\n  }\n\n  //для определения содержимого в Header\n  const handleRegisterOpen = () => {\n    setIsRegisterOpen(!isRegisterOpen);\n  }\n\n  const handleTokenCheck = () => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      auth.checkToken(jwt)\n        .then((res) => {\n          setCurrentEmail(res.data.email);\n          if (res) {\n            setIsLoggedIn(true);\n            history.push('/');\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  //#endregion\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        {isHamburgerClicked && <HamburgerInfo email={currentEmail} handleLogout={handleLogout} />}\n        <Header handleHamburgerClick={handleHamburgerClick} isHamburgerClicked={isHamburgerClicked}\n          isRegisterOpen={isRegisterOpen} handleRegisterOpen={handleRegisterOpen}\n          handleLogout={handleLogout} isLoggedIn={isLoggedIn} email={currentEmail} />\n        <Switch>\n          <Route exact path=\"/sign-up\">\n            <Register handleRegisterOpen={handleRegisterOpen} handleRegister={handleRegister} />\n          </Route>\n          <Route exact path=\"/sign-in\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <ProtectedRoute path=\"/\" component={Main} isLoggedIn={isLoggedIn} cards={cards} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\n            onCardLike={handleCardLike} onCardDelete={handleDeleteButtonClick} isLoading={isLoading} />\n        </Switch>\n        <Footer />\n\n        <InfoTooltip isOpen={isInfoPopupOpen} isValid={isRegisterValid} onClose={closeAllPopups}\n          onClick={handleCLosePopupByClickOnOverlay} />\n\n        <AddPlacePopup isOpen={isAddPlaceFormOpen} onClose={closeAllPopups}\n          onAddPlace={handleAddPlace} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ConfirmDeletePopup isOpen={isConfirmDeleteFormOpen} onClose={closeAllPopups}\n          onCardDelete={handleCardDelete} isLoading={isLoading} card={cardToDelete}\n          onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditAvatarPopup isOpen={isEditAvatarFormOpen} onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditProfilePopup isOpen={isEditProfileFormOpen} onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} onClick={handleCLosePopupByClickOnOverlay} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/annakozevatova/dev/react-mesto-auth/src/components/FormValidator.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/EditAvatarPopup.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/Footer.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/AddPlacePopup.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/Header.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/Main.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/EditProfilePopup.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/ConfirmDeletePopup.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/ImagePopup.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/utils/api.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/PopupWithForm.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/utils/constants.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/Card.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/Spinner.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/utils/utils.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/ProtectedRoute.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/Login.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/Register.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/InfoTooltip.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/utils/auth.js",[],"/Users/annakozevatova/dev/react-mesto-auth/src/components/HamburgerInfo.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":25,"nodeType":"114","messageId":"115","endLine":12,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":65,"column":6,"nodeType":"118","endLine":65,"endColumn":8,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [handleTokenCheck]",{"range":"125","text":"126"},[2416,2418],"[handleTokenCheck]"]