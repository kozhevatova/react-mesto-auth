{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Spinner.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/FormValidator.js","utils/constants.js","components/PopupWithForm.js","utils/utils.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/ProtectedRoute.js","utils/auth.js","components/Login.js","components/Register.js","images/check.svg","images/wrong.svg","components/InfoTooltip.js","components/HamburgerInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","handleHamburgerClick","isHamburgerClicked","isRegisterOpen","handleRegisterOpen","handleLogout","isLoggedIn","email","path","className","to","onClick","type","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","alt","name","src","link","aria-label","length","Spinner","Main","cards","onEditProfile","onAddPlace","onEditAvatar","isLoading","style","background","avatar","about","map","Footer","id","Date","getFullYear","ImagePopup","onClose","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","newName","newInfo","method","body","JSON","stringify","cardId","_addLike","_deleteLike","authorization","FormValidator","data","formElement","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_errorSelector","errorSelector","_formElement","_button","querySelector","_inputList","Array","from","querySelectorAll","input","errorMessage","error","classList","add","textContent","remove","validity","valid","_hideInputError","_showInputError","validationMessage","removeAttribute","setAttribute","_hasInvalidInput","_disableButton","_enableButton","forEach","addEventListener","_handleReset","_checkInputValidity","toggleButtonState","_setEventListenersForReset","popupName","popupDescription","loginEmail","loginPassword","validationConfig","PopupWithForm","props","formRef","useRef","useEffect","form","formValidator","enableValidation","validateForm","current","isOpen","onSubmit","ref","title","children","disabled","buttonTitle","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","handleInputChange","e","target","value","console","log","preventDefault","placeholder","required","minLength","maxLength","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","AddPlacePopup","setLink","ConfirmDeletePopup","ProtectedRoute","Component","component","BASE_URL","Login","handleLogin","history","useHistory","setEmail","password","setPassword","event","token","localStorage","setItem","auth","push","catch","err","pattern","Register","handleRegister","handleSubmit","InfoTooltip","isValid","check","wrong","HamburgerInfo","App","setCurrentUser","setCards","selectedCard","setSelectedCard","setIsLoading","cardToDelete","setCardToDelete","setIsLoggedIn","setIsHamburgerClicked","setIsRegisterOpen","isRegisterValid","setIsRegisterValid","currentEmail","setCurrentEmail","isEditProfileFormOpen","setIsEditProfileFormOpen","isAddPlaceFormOpen","setIsAddPlaceFormOpen","isEditAvatarFormOpen","setIsEditAvatarFormOpen","isConfirmDeleteFormOpen","setIsConfirmDeleteFormOpen","isInfoPopupOpen","setIsInfoPopupOpen","handleTokenCheck","all","getUserInfo","getInitialCards","values","userInfo","initialCards","finally","handleEscClose","key","closeAllPopups","handleCLosePopupByClickOnOverlay","currentTarget","setEscListener","document","removeEventListener","removeItem","getItem","jwt","Provider","exact","changeLikeCardStatus","newCard","newCards","c","newPlace","addNewCard","deleteCard","filter","newAvatar","editAvatar","info","setUserInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f1701f3.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nconst Header = ({ handleHamburgerClick, isHamburgerClicked, isRegisterOpen,\n    handleRegisterOpen, handleLogout, isLoggedIn, email }) => {\n    const path = (\n        `${isRegisterOpen ? \"/sign-in\" : \"/sign-up\"}`\n    );\n\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n            {\n                isLoggedIn ?\n                    <div className=\"header__email-container\">\n                        <p className=\"header__email\">{email}</p>\n                        <NavLink to=\"/sign-in\" className=\"header__button\" onClick={handleLogout}>\n                            Выйти\n                        </NavLink>\n                    </div> :\n                    <NavLink to={path} className=\"header__button\" onClick={handleRegisterOpen}>\n                        {isRegisterOpen ? 'Войти' : 'Регистрация'}\n                    </NavLink>\n            }\n            {\n                isLoggedIn && (isHamburgerClicked ?\n                    <button className=\"header__close-button\" type=\"button\" onClick={handleHamburgerClick}></button> :\n                    <button className=\"header__hamburger\" type=\"button\" onClick={handleHamburgerClick}></button>)\n\n            }\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = ({ card, onCardClick, onCardLike, onCardDelete }) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    //определение является ли текущий пользователь владельцем карточки\n    const isOwn = card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (\n        `element__delete-button ${isOwn ?\n            'element__delete-button_visible' :\n            'element__delete-button_hidden'}`\n    );\n\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    const cardLikeButtonClassName = (\n        `element__like ${isLiked ?\n            'element__like_active' :\n            'element__like_inactive'}`\n    );\n\n    const handleClick = () => {\n        onCardClick(card);\n    }\n\n    const handleLikeClick = () => {\n        onCardLike(card);\n    }\n\n    const handleDeleteClick = () => {\n        onCardDelete(card);\n    }\n\n    return (\n        <li className=\"element\">\n            <img alt={card.name} className=\"element__image\" src={card.link} onClick={handleClick} />\n            <div className=\"element__title\">\n                <h2 className=\"element__place-name\">{card.name}</h2>\n                <div className=\"element__like-container\">\n                    <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Поставить лайк.\"\n                        onClick={handleLikeClick}></button>\n                    <p className=\"element__like-num\">{card.likes.length}</p>\n                </div>\n            </div>\n\n            <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить фото.\"\n                onClick={handleDeleteClick}></button>\n        </li>\n    );\n}\n\nexport default Card;","const Spinner = () => {\n  return <div className=\"spinner\" />;\n}\n\nexport default Spinner;","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Card from './Card';\nimport Spinner from './Spinner';\n\nconst Main = ({ cards, onEditProfile, onAddPlace, onEditAvatar,\n  onCardClick, onCardLike, onCardDelete, isLoading }) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\"> \n      <section className=\"profile\">\n        <div className=\"profile__avatar\" style={{ background: `center/cover url(${currentUser.avatar}) no-repeat` }}>\n          <button className=\"profile__edit-avatar-button\"\n            onClick={onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__title\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button className=\"profile__edit-button\" type=\"button\"\n              aria-label=\"Редактировать профиль.\" onClick={onEditProfile}></button>\n          </div>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n          aria-label=\"Добавить фотографию.\" onClick={onAddPlace}></button>\n      </section>\n\n      <div>\n        <ul className=\"elements\"> {\n          isLoading ? (\n            <Spinner />\n          ) : (\n              cards.map((card) => {\n                return (\n                    <Card card={card} key={card._id} onCardClick={onCardClick} onCardLike={onCardLike}\n                      onCardDelete={onCardDelete} />\n                );\n              })\n            )\n        }\n        </ul>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;","const Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; <span id=\"year\">{new Date().getFullYear()}</span> Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","const ImagePopup = ({ card, onClose, onClick }) => {\n  return (\n    <div className={`popup popup_type_zoomed-image ${(card && 'popup_opened')}`} onClick={onClick}>\n      <div className=\"popup__form popup__form_type_zoomed-image\">\n        <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"popup__image\" />\n        <p className=\"popup__name popup__name_place_zoomed-image\">{card ? card.name : ''}</p>\n        <button className=\"popup__close-button\" type=\"reset\" onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then((res) => this._getResponseData(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  setUserInfo(newName, newInfo) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: newName,\n        about: newInfo\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: 'POST',\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  _addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: 'PUT',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  _deleteLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this._addLike(cardId) : this._deleteLike(cardId);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-17',\n  headers: {\n    authorization: 'b1b736c3-ab37-40d8-99c3-eedcbb719e9d',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","class FormValidator {\n  constructor(data, formElement) {\n    this._inputSelector = data.inputSelector;\n    this._submitButtonSelector = data.submitButtonSelector;\n    this._inactiveButtonClass = data.inactiveButtonClass;\n    this._inputErrorClass = data.inputErrorClass;\n    this._errorClass = data.errorClass;\n    this._errorSelector = data.errorSelector;\n    this._formElement = formElement;\n    this._button = formElement.querySelector(data.submitButtonSelector);\n    this._inputList = Array.from(formElement.querySelectorAll(data.inputSelector));\n  }\n\n  // отображение ошибки ввода\n  _showInputError(input, errorMessage) {\n    const error = this._formElement.querySelector(`#${input.id}-error`);\n    input.classList.add(this._inputErrorClass);\n    error.textContent = errorMessage;\n    error.classList.add(this._errorClass);\n  }\n\n  // удаление ошибки ввода\n  _hideInputError(input) {\n    const error = this._formElement.querySelector(`#${input.id}-error`);\n    input.classList.remove(this._inputErrorClass);\n    error.textContent = '';\n    error.classList.remove(this._errorClass);\n  }\n\n  // проверка валидности ввода\n  _checkInputValidity(input) {\n    if (!input.validity.valid) {\n      this._showInputError(input, input.validationMessage);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n  // сделать кнопку активной\n  _enableButton() {\n    this._button.classList.remove(this._inactiveButtonClass);\n    this._button.removeAttribute('disabled');\n  }\n\n  // сделать кнопку неактивной\n  _disableButton() {\n    this._button.classList.add(this._inactiveButtonClass);\n    this._button.setAttribute('disabled', 'true');\n  }\n\n  // проверка наличия хотя бы одного неверного ввода\n  _hasInvalidInput() {\n    return this._inputList.some((input) => !input.validity.valid);\n  }\n\n  // изменение активности submit кнопки\n  toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._disableButton();\n    } else {\n      this._enableButton();\n    }\n  }\n\n  // удаление ошибки ввода при закрытии формы\n  _handleReset() {\n    this._inputList.forEach((input) => {\n      this._hideInputError(input);\n    });\n  }\n\n  _setEventListenersForReset() {\n    this._formElement.addEventListener('reset', () => {\n      this._handleReset();\n    });\n  }\n\n  // настройка валидации\n  enableValidation() {\n    this._inputList.forEach((input) => {\n      input.addEventListener('input', () => {\n        this._checkInputValidity(input);\n        this.toggleButtonState();\n      });\n    });\n\n    this._setEventListenersForReset();\n  }\n}\n\nexport default FormValidator;\n","const popupName = 'popupName';\nconst popupDescription = 'popupDescription';\nconst loginEmail = 'loginEmail';\nconst loginPassword = 'loginPassword';\n\nconst validationConfig = {\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input-error_active',\n  errorSelector: '.popup__input-error',\n};\n\nexport { popupDescription, popupName, validationConfig, loginEmail, loginPassword } ;","import { useEffect, useRef } from \"react\";\nimport { validateForm } from '../utils/utils';\n\nconst PopupWithForm = (props) => {\n  const formRef = useRef();\n\n  useEffect(() => {\n    validateForm(formRef.current).enableValidation();\n  }, []);\n\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`} onClick={props.onClick}>\n      <form className={`popup__form popup__form_type_${props.name}`} method=\"POST\" name={props.name}\n        onSubmit={props.onSubmit} ref={formRef} >\n        <button className=\"popup__close-button\" type=\"reset\"\n          aria-label=\"Закрыть форму.\" onClick={props.onClose}></button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        {props.children}\n        <button type=\"submit\" className={`popup__save-button popup__button\n          ${(!(props.name === 'delete-confirm') && props.isOpen) && 'popup__button_disabled'}`}\n          disabled={!(props.name === 'delete-confirm') && props.isOpen}\n        >{props.buttonTitle}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import FormValidator from '../components/FormValidator';\nimport { validationConfig } from './constants';\n\n// включить валидацию формы\nconst validateForm = (form) => {\n  const formValidator = new FormValidator(validationConfig, form);\n  formValidator.enableValidation();\n  return formValidator;\n};\n\nexport { validateForm };","import React, { useContext, useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupName, popupDescription } from '../utils/constants';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst EditProfilePopup = ({ isOpen, onClose, onUpdateUser, isLoading, onClick }) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  \n  //присвоение полям попапа значений и при открытии попапа, и при изменении данных пользователя\n  useEffect(() => {\n    if (isOpen) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser, isOpen]);\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case popupName: setName(e.target.value);\n        break;\n      case popupDescription: setDescription(e.target.value);\n        break;\n      default: \n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //отправка данных в API \n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"edit-form\" title=\"Редактировать профиль\" buttonTitle={isLoading ? 'Сохранение...' : 'Сохранить'}\n      isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} onClick={onClick}>\n      <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n        placeholder=\"Имя\" required id=\"name-input\" minLength=\"2\" maxLength=\"40\"\n        onChange={handleInputChange} value={name} />\n      <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n      <input type=\"text\" className=\"popup__input popup__description\" name=\"popupDescription\"\n        placeholder=\"О себе\" required id=\"description-input\" minLength=\"2\" maxLength=\"200\"\n        onChange={handleInputChange} value={description} />\n      <span className=\"popup__input-error\" id=\"description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import { useEffect, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditAvatarPopup = ({isOpen, onClose, onUpdateAvatar, isLoading, onClick}) => {\n  const inputRef = useRef();\n\n  //очистка поля ввода при открытии попапа\n  useEffect(() => {\n    if(isOpen) {\n      inputRef.current.value = '';\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    //отправка данных в API\n    onUpdateAvatar({\n      avatar: inputRef.current.value\n    })\n  }\n\n  return (\n    <PopupWithForm name=\"edit-avatar\" title=\"Обновить аватар\" buttonTitle={isLoading ? \n      \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} \n      onClick={onClick} >\n      <input type=\"url\" className=\"popup__input popup__description\" name=\"avatarUrl\"\n        placeholder=\"Ссылка на аватар\" required id=\"url-input\" ref={inputRef}/>\n      <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import { useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupName, popupDescription } from '../utils/constants';\n\nconst AddPlacePopup = ({ isOpen, onClose, onAddPlace, isLoading, onClick }) => {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  useEffect(() => {\n    //очистка полей ввода при открытии попапа\n    if (isOpen) {\n      setName('');\n      setLink('');\n    }\n\n  }, [isOpen]);\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case popupName: setName(e.target.value);\n        break;\n      case popupDescription: setLink(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleAddPlaceSubmit = (e) => {\n    e.preventDefault();\n\n    //отправка данных в API\n    onAddPlace({\n      name,\n      link\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"add-form\" title=\"Новое место\" buttonTitle={isLoading ?\n      \"Создание...\" : \"Создать\"} isOpen={isOpen} onClose={onClose} onSubmit={handleAddPlaceSubmit}\n      onClick={onClick} >\n      <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n        placeholder=\"Название\" required id=\"title-input\" minLength=\"2\" maxLength=\"30\"\n        value={name} onChange={handleInputChange} />\n      <span className=\"popup__input-error\" id=\"title-input-error\"></span>\n      <input type=\"url\" className=\"popup__input popup__description\" name=\"popupDescription\"\n        placeholder=\"Ссылка на картинку\" required id=\"url-input\" value={link}\n        onChange={handleInputChange} />\n      <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = ({isOpen, onClose, onCardDelete, isLoading, card, onClick}) => {\n  const handleCardDelete = (e) => {\n    e.preventDefault();\n    onCardDelete(card);\n  }\n  return (\n    <PopupWithForm name=\"delete-confirm\" title=\"Вы уверены?\" buttonTitle={isLoading ?\n    \"Удаление...\" : \"Да\"} isOpen={isOpen} onClose={onClose} onSubmit={handleCardDelete} \n    onClick={onClick} />\n  );\n}\n\nexport default ConfirmDeletePopup;","import { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {\n        () => props.isLoggedIn ?\n          <Component {...props} /> :\n          <Redirect to=\"./sign-in\" />\n      }\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;","export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  })\n    .then((res) => res.json())\n    .then((res) => res);\n}\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        return data;\n      }\n    });\n}\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`,{\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n  .then((res) => res.json())\n  .then((data) => data);\n}","import { useState } from \"react\";\nimport { loginEmail, loginPassword } from '../utils/constants';\nimport * as auth from '../utils/auth';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = ({ handleLogin }) => {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case loginEmail: setEmail(e.target.value);\n        break;\n      case loginPassword: setPassword(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(!email || !password) {\n      return;\n    }\n    auth.authorize(email,password)\n      .then((data) => {\n        if(data.token) {\n          setEmail('');\n          setPassword('');\n          handleLogin();\n          history.push('/');\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"login\">\n      <h2 className=\"login__title\">Вход</h2>\n      <form className=\"login__form\" method=\"POST\" onSubmit={handleSubmit}>\n        <input className=\"login__input login__email\" type=\"email\" name=\"loginEmail\" placeholder=\"Email\" \n        required id=\"email-input\" value={email} onChange={handleInputChange}\n        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[A-Z]{2}|com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum)\\b\"\n        ></input>\n        <input className=\"login__input login__password\" type=\"password\" name=\"loginPassword\" placeholder=\"Пароль\" required\n          id=\"password-input\" value={password} onChange={handleInputChange}></input>\n        <button className=\"login__submit-button\" type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { loginEmail, loginPassword } from '../utils/constants';\nimport * as auth from '../utils/auth';\n\nconst Register = ({ handleRegisterOpen, handleRegister }) => {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case loginEmail: setEmail(e.target.value);\n        break;\n      case loginPassword: setPassword(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      return;\n    }\n    auth.register(email, password)\n      .then((res) => {\n        if (res) {\n          handleRegister(true);\n          history.push('/sign-in');\n        } else {\n          handleRegister(false);\n          console.log('Error');\n        }\n      })\n      .catch((err) => {\n        handleSubmit(false);\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"login login_type_register\">\n      <h2 className=\"login__title\">Регистрация</h2>\n      <form className=\"login__form\" onSubmit={handleSubmit}>\n        <input className=\"login__input login__email\" type=\"email\" name=\"loginEmail\" placeholder=\"Email\"\n          required id=\"email-input\" value={email} onChange={handleInputChange}\n          pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[A-Z]{2}|com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum)\\b\"\n        ></input>\n        <input className=\"login__input login__password\" type=\"password\" name=\"loginPassword\" placeholder=\"Пароль\"\n          required id=\"password-input\" value={password} onChange={handleInputChange}></input>\n        <button className=\"login__submit-button\" type=\"submit\">Зарегистрироваться</button>\n        <p className=\"login__text\">Уже зарегистрированы?\n          <NavLink to=\"/sign-in\" className=\"login__link\" onClick={handleRegisterOpen}>Войти</NavLink>\n        </p>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;","export default __webpack_public_path__ + \"static/media/check.e004e6e7.svg\";","export default __webpack_public_path__ + \"static/media/wrong.471086c8.svg\";","import check from '../images/check.svg';\nimport wrong from '../images/wrong.svg';\n\nconst InfoTooltip = ({ isOpen, isValid, onClose }) => {\n  return (\n    <div className={`popup popup_type_info ${isOpen && 'popup_opened'}`}>\n      <div className=\"popup__form popup__form_type_info\">\n        <button className=\"popup__close-button popup__close-button_type_info\" type=\"reset\"\n          aria-label=\"Закрыть форму.\" onClick={onClose}></button>\n        <img className=\"popup__status-image\" src={isValid ? check : wrong} alt=\"Статус регистрации.\" />\n        <p className=\"popup__text\">{isValid ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;","import { NavLink } from \"react-router-dom\"\n\nconst HamburgerInfo = ({ email, handleLogout }) => {\n  return (\n    <div className=\"info\">\n      <p className=\"info__email\">{email}</p>\n      <NavLink className=\"info__link\" to=\"/sign-in\" onClick={handleLogout}>Выйти</NavLink>\n    </div>\n  );\n}\n\nexport default HamburgerInfo;","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\nimport HamburgerInfo from './HamburgerInfo';\n\nfunction App() {\n  //#region стейты\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isHamburgerClicked, setIsHamburgerClicked] = useState(false);\n  const [isRegisterOpen, setIsRegisterOpen] = useState(false);\n  const [isRegisterValid, setIsRegisterValid] = useState(false);\n  const [currentEmail, setCurrentEmail] = useState('');\n\n  //стейты для открытия/закрытия попапов\n  const [isEditProfileFormOpen, setIsEditProfileFormOpen] = useState(false);\n  const [isAddPlaceFormOpen, setIsAddPlaceFormOpen] = useState(false);\n  const [isEditAvatarFormOpen, setIsEditAvatarFormOpen] = useState(false);\n  const [isConfirmDeleteFormOpen, setIsConfirmDeleteFormOpen] = useState(false);\n  const [isInfoPopupOpen, setIsInfoPopupOpen] = useState(false);\n\n  const history = useHistory();\n\n  //#endregion\n\n  //#region эффекты\n  //получение данных о пользователе с сервера и присвоение этих данных контексту\n  useEffect(() => {\n    handleTokenCheck();\n    setIsLoading(true);\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards()\n    ])\n      .then((values) => {\n        const [userInfo, initialCards] = values;\n        console.log(userInfo);\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  //#endregion\n\n  //#region обработчики событий\n  //добавление карточки\n  const handleAddPlace = (newPlace) => {\n    setIsLoading(true);\n    api.addNewCard(newPlace.name, newPlace.link)\n      .then((newPlace) => {\n        setCards([newPlace, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //лайк\n  const handleCardLike = (card) => {\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    //отправка запроса в API и получение обновленных данных карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        //формирование нового массива на основе имеющегося, \n        //поставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //удаление карточки\n  const handleCardDelete = (card) => {\n    setIsLoading(true);\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //обработчик закрытия по нажатию Esc\n  const handleEscClose = (event) => {\n    if (event.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  //обработчик закрытия попапов при нажатии по фону\n  const handleCLosePopupByClickOnOverlay = (event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    closeAllPopups();\n  }\n\n  const setEscListener = () => {\n    document.addEventListener('keydown', handleEscClose);\n  }\n\n  const removeEscListener = () => {\n    document.removeEventListener('keydown', handleEscClose);\n  }\n\n  //обработчик клика по кнопке удаления карточки\n  const handleDeleteButtonClick = (card) => {\n    //открытие попапа подтверждения удаления\n    setIsConfirmDeleteFormOpen(true);\n    setCardToDelete(card);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования аватара\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования профиля\n  const handleEditProfileClick = () => {\n    setIsEditProfileFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа добавления карточки\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа с картинкой\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n\n    setEscListener();\n  }\n\n  //закрытие всех попапов\n  const closeAllPopups = () => {\n    setIsEditAvatarFormOpen(false);\n    setIsEditProfileFormOpen(false);\n    setIsAddPlaceFormOpen(false);\n    setIsConfirmDeleteFormOpen(false);\n    setIsInfoPopupOpen(false);\n    setSelectedCard(null);\n\n    removeEscListener();\n  }\n\n  //обработчик обновления инфы пользователя\n  const handleUpdateUser = (info) => {\n    setIsLoading(true);\n    api.setUserInfo(info.name, info.about)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //обработчик обновления аватара\n  const handleUpdateAvatar = (newAvatar) => {\n    setIsLoading(true);\n    api.editAvatar(newAvatar.avatar)\n      .then((newAvatar) => {\n        setCurrentUser(newAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //методы для авторизации и регистрации\n  const handleLogin = () => {\n    // setIsLoggedIn(true);\n    handleTokenCheck();\n  }\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setIsHamburgerClicked(false);\n    setIsRegisterOpen(false);\n    localStorage.removeItem('jwt');\n  }\n\n  const handleRegister = (status) => {\n    setIsInfoPopupOpen(status);\n    setIsRegisterValid(status);\n    setIsRegisterOpen(false);\n  }\n\n  const handleHamburgerClick = () => {\n    setIsHamburgerClicked(!isHamburgerClicked);\n  }\n\n  //для определения содержимого в Header\n  const handleRegisterOpen = () => {\n    setIsRegisterOpen(!isRegisterOpen);\n  }\n\n  const handleTokenCheck = () => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      auth.checkToken(jwt)\n        .then((res) => {\n          setCurrentEmail(res.data.email);\n          if (res) {\n            setIsLoggedIn(true);\n            history.push('/');\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  //#endregion\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        {isHamburgerClicked && <HamburgerInfo email={currentEmail} handleLogout={handleLogout} />}\n        <Header handleHamburgerClick={handleHamburgerClick} isHamburgerClicked={isHamburgerClicked}\n          isRegisterOpen={isRegisterOpen} handleRegisterOpen={handleRegisterOpen}\n          handleLogout={handleLogout} isLoggedIn={isLoggedIn} email={currentEmail} />\n        <Switch>\n          <Route exact path=\"/sign-up\">\n            <Register handleRegisterOpen={handleRegisterOpen} handleRegister={handleRegister} />\n          </Route>\n          <Route exact path=\"/sign-in\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <ProtectedRoute path=\"/\" component={Main} isLoggedIn={isLoggedIn} cards={cards} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\n            onCardLike={handleCardLike} onCardDelete={handleDeleteButtonClick} isLoading={isLoading} />\n        </Switch>\n        <Footer />\n\n        <InfoTooltip isOpen={isInfoPopupOpen} isValid={isRegisterValid} onClose={closeAllPopups}\n          onClick={handleCLosePopupByClickOnOverlay} />\n\n        <AddPlacePopup isOpen={isAddPlaceFormOpen} onClose={closeAllPopups}\n          onAddPlace={handleAddPlace} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ConfirmDeletePopup isOpen={isConfirmDeleteFormOpen} onClose={closeAllPopups}\n          onCardDelete={handleCardDelete} isLoading={isLoading} card={cardToDelete}\n          onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditAvatarPopup isOpen={isEditAvatarFormOpen} onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditProfilePopup isOpen={isEditProfileFormOpen} onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} onClick={handleCLosePopupByClickOnOverlay} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}